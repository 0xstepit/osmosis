{
  "contract_name": "crosschain-registry",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "owner"
    ],
    "properties": {
      "owner": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "modify_denom_alias"
        ],
        "properties": {
          "modify_denom_alias": {
            "type": "object",
            "required": [
              "operations"
            ],
            "properties": {
              "operations": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/DenomAliasInput"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "modify_contract_alias"
        ],
        "properties": {
          "modify_contract_alias": {
            "type": "object",
            "required": [
              "operations"
            ],
            "properties": {
              "operations": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ContractAliasInput"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "modify_chain_channel_links"
        ],
        "properties": {
          "modify_chain_channel_links": {
            "type": "object",
            "required": [
              "operations"
            ],
            "properties": {
              "operations": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ConnectionInput"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "modify_bech32_prefixes"
        ],
        "properties": {
          "modify_bech32_prefixes": {
            "type": "object",
            "required": [
              "operations"
            ],
            "properties": {
              "operations": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ChainToBech32PrefixInput"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "modify_authorized_addresses"
        ],
        "properties": {
          "modify_authorized_addresses": {
            "type": "object",
            "required": [
              "operations"
            ],
            "properties": {
              "operations": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/AuthorizedAddressInput"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "transfer_ownership"
        ],
        "properties": {
          "transfer_ownership": {
            "type": "object",
            "required": [
              "new_owner"
            ],
            "properties": {
              "new_owner": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "propose_pfm"
        ],
        "properties": {
          "propose_pfm": {
            "type": "object",
            "required": [
              "chain"
            ],
            "properties": {
              "chain": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "validate_pfm"
        ],
        "properties": {
          "validate_pfm": {
            "type": "object",
            "required": [
              "chain"
            ],
            "properties": {
              "chain": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "unwrap_coin"
        ],
        "properties": {
          "unwrap_coin": {
            "type": "object",
            "required": [
              "receiver"
            ],
            "properties": {
              "into_chain": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "receiver": {
                "type": "string"
              },
              "with_memo": {
                "default": "",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Addr": {
        "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
        "type": "string"
      },
      "AuthorizedAddressInput": {
        "type": "object",
        "required": [
          "addr",
          "operation",
          "source_chain"
        ],
        "properties": {
          "addr": {
            "$ref": "#/definitions/Addr"
          },
          "new_addr": {
            "anyOf": [
              {
                "$ref": "#/definitions/Addr"
              },
              {
                "type": "null"
              }
            ]
          },
          "operation": {
            "$ref": "#/definitions/Operation"
          },
          "permission": {
            "anyOf": [
              {
                "$ref": "#/definitions/Permission"
              },
              {
                "type": "null"
              }
            ]
          },
          "source_chain": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ChainToBech32PrefixInput": {
        "type": "object",
        "required": [
          "chain_name",
          "operation",
          "prefix"
        ],
        "properties": {
          "chain_name": {
            "type": "string"
          },
          "new_prefix": {
            "type": [
              "string",
              "null"
            ]
          },
          "operation": {
            "$ref": "#/definitions/FullOperation"
          },
          "prefix": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConnectionInput": {
        "type": "object",
        "required": [
          "destination_chain",
          "operation",
          "source_chain"
        ],
        "properties": {
          "channel_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "destination_chain": {
            "type": "string"
          },
          "new_channel_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "new_destination_chain": {
            "type": [
              "string",
              "null"
            ]
          },
          "new_source_chain": {
            "type": [
              "string",
              "null"
            ]
          },
          "operation": {
            "$ref": "#/definitions/FullOperation"
          },
          "source_chain": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ContractAliasInput": {
        "type": "object",
        "required": [
          "alias",
          "operation"
        ],
        "properties": {
          "address": {
            "type": [
              "string",
              "null"
            ]
          },
          "alias": {
            "type": "string"
          },
          "new_alias": {
            "type": [
              "string",
              "null"
            ]
          },
          "operation": {
            "$ref": "#/definitions/Operation"
          }
        },
        "additionalProperties": false
      },
      "DenomAliasInput": {
        "type": "object",
        "required": [
          "alias",
          "full_denom_path",
          "operation"
        ],
        "properties": {
          "alias": {
            "type": "string"
          },
          "full_denom_path": {
            "type": "string"
          },
          "operation": {
            "$ref": "#/definitions/FullOperation"
          }
        },
        "additionalProperties": false
      },
      "FullOperation": {
        "type": "string",
        "enum": [
          "set",
          "change",
          "remove",
          "enable",
          "disable"
        ]
      },
      "Operation": {
        "type": "string",
        "enum": [
          "set",
          "change",
          "remove"
        ]
      },
      "Permission": {
        "type": "string",
        "enum": [
          "global_admin",
          "chain_admin",
          "chain_maintainer"
        ]
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "get_address_from_alias"
        ],
        "properties": {
          "get_address_from_alias": {
            "type": "object",
            "required": [
              "contract_alias"
            ],
            "properties": {
              "contract_alias": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_channel_from_chain_pair"
        ],
        "properties": {
          "get_channel_from_chain_pair": {
            "type": "object",
            "required": [
              "destination_chain",
              "source_chain"
            ],
            "properties": {
              "destination_chain": {
                "type": "string"
              },
              "source_chain": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_destination_chain_from_source_chain_via_channel"
        ],
        "properties": {
          "get_destination_chain_from_source_chain_via_channel": {
            "type": "object",
            "required": [
              "on_chain",
              "via_channel"
            ],
            "properties": {
              "on_chain": {
                "type": "string"
              },
              "via_channel": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_bech32_prefix_from_chain_name"
        ],
        "properties": {
          "get_bech32_prefix_from_chain_name": {
            "type": "object",
            "required": [
              "chain_name"
            ],
            "properties": {
              "chain_name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_chain_name_from_bech32_prefix"
        ],
        "properties": {
          "get_chain_name_from_bech32_prefix": {
            "type": "object",
            "required": [
              "prefix"
            ],
            "properties": {
              "prefix": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_denom_trace"
        ],
        "properties": {
          "get_denom_trace": {
            "type": "object",
            "required": [
              "ibc_denom"
            ],
            "properties": {
              "ibc_denom": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "has_packet_forwarding"
        ],
        "properties": {
          "has_packet_forwarding": {
            "type": "object",
            "required": [
              "chain"
            ],
            "properties": {
              "chain": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_alias_for_denom_path"
        ],
        "properties": {
          "get_alias_for_denom_path": {
            "type": "object",
            "required": [
              "denom_path"
            ],
            "properties": {
              "denom_path": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "get_denom_path_for_alias"
        ],
        "properties": {
          "get_denom_path_for_alias": {
            "type": "object",
            "required": [
              "alias"
            ],
            "properties": {
              "alias": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "get_address_from_alias": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GetAddressFromAliasResponse",
      "type": "object",
      "required": [
        "address"
      ],
      "properties": {
        "address": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "get_alias_for_denom_path": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueryAliasForDenomPathResponse",
      "type": "object",
      "required": [
        "alias"
      ],
      "properties": {
        "alias": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "get_bech32_prefix_from_chain_name": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueryGetBech32PrefixFromChainNameResponse",
      "type": "object",
      "required": [
        "bech32_prefix"
      ],
      "properties": {
        "bech32_prefix": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "get_chain_name_from_bech32_prefix": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueryGetChainNameFromBech32PrefixResponse",
      "type": "object",
      "required": [
        "chain_name"
      ],
      "properties": {
        "chain_name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "get_channel_from_chain_pair": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GetChannelFromChainPairResponse",
      "type": "object",
      "required": [
        "channel_id"
      ],
      "properties": {
        "channel_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "get_denom_path_for_alias": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueryDenomPathForAliasResponse",
      "type": "object",
      "required": [
        "denom_path"
      ],
      "properties": {
        "denom_path": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "get_denom_trace": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueryDenomTraceResponse",
      "type": "object",
      "properties": {
        "denom_trace": {
          "anyOf": [
            {
              "$ref": "#/definitions/DenomTrace"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "definitions": {
        "DenomTrace": {
          "type": "object",
          "required": [
            "base_denom",
            "path"
          ],
          "properties": {
            "base_denom": {
              "type": "string"
            },
            "path": {
              "type": "string"
            }
          }
        }
      }
    },
    "get_destination_chain_from_source_chain_via_channel": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GetDestinationChainFromSourceChainViaChannelResponse",
      "type": "object",
      "required": [
        "destination_chain"
      ],
      "properties": {
        "destination_chain": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "has_packet_forwarding": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Boolean",
      "type": "boolean"
    }
  }
}
